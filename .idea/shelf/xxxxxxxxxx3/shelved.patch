Index: app/src/main/java/org/dieschnittstelle/mobile/android/skeleton/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.dieschnittstelle.mobile.android.skeleton;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.InputType;\r\nimport android.text.TextUtils;\r\nimport android.text.TextWatcher;\r\nimport android.util.Patterns;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.material.snackbar.Snackbar;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n    private EditText editTextemailAdresse;\r\n    private EditText editTextpassword;\r\n    private Button btnLogin;\r\n    private TextView txtHinweis;\r\n\r\n    private final String userName = \"Admin@gmx.de\";\r\n    private final String password = \"123456\";\r\n\r\n    boolean isValid = false;\r\n\r\n    private int counter = 5;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        setContentView(R.layout.activity_login);\r\n\r\n        editTextemailAdresse = findViewById(R.id.editEmail);\r\n        editTextpassword = findViewById(R.id.editTextTextPassword);\r\n        btnLogin = findViewById(R.id.btnLogin);\r\n        txtHinweis = findViewById(R.id.txtWarnmeldung);\r\n\r\n\r\n        editTextpassword.setInputType(InputType.TYPE_CLASS_NUMBER);\r\n\r\n        hebeHinweismeldungHervor();\r\n\r\n\r\n\r\n\r\n//        btnLogin.setEnabled(false);\r\n\r\n        btnLogin.setOnClickListener(v -> {\r\n            String inputEmail = editTextemailAdresse.getText().toString();\r\n            String inputPassword = editTextpassword.getText().toString();\r\n\r\n            if(inputEmail.isEmpty() || inputPassword.isEmpty()){\r\n//              Snackbar.make(v, \"Eingaben: \" + inputEmail + \" , \" + inputPassword, Snackbar.LENGTH_SHORT).show();\r\n              Snackbar.make(v, \"Fülle beide Felder aus!\", Snackbar.LENGTH_SHORT).show();\r\n              txtHinweis.setText(\"FEHLER!\");\r\n            }else{\r\n//                btnLogin.setEnabled(true);\r\n\r\n                boolean korrektesEmailFormat = isValidEmail(inputEmail);\r\n\r\n                if(korrektesEmailFormat){\r\n                    isValid = validate(inputEmail, inputPassword);\r\n\r\n                    if(!isValid){\r\n                        counter--;\r\n                        Snackbar.make(v, \"Falscher Nutzername oder Passwort!\", Snackbar.LENGTH_SHORT).show();\r\n                        txtHinweis.setText(\"Versuche übrig: \" + counter);\r\n\r\n                        if(counter == 0){\r\n                            btnLogin.setEnabled(false);\r\n                            Snackbar.make(v, \"Neu starten die Anwendung pls!\", Snackbar.LENGTH_SHORT).show();\r\n                        }\r\n                    }else{\r\n                        Snackbar.make(v, \"Erfolgreich!\", Snackbar.LENGTH_SHORT).show();\r\n\r\n                        Intent intent = new Intent(this, MainActivity.class);\r\n                        startActivity(intent);\r\n                    }\r\n                }else{\r\n                    txtHinweis.setText(\"Dies ist keine gültige Email!\");\r\n                    editTextemailAdresse.addTextChangedListener(new TextWatcher() {\r\n                        @Override\r\n                        public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                            txtHinweis.setText(\"\");\r\n                        }\r\n\r\n                        @Override\r\n                        public void afterTextChanged(Editable s) {\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private boolean validate(String name, String password){\r\n        if(name.equals(userName) && password.equals(this.password)){\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public static boolean isValidEmail(CharSequence target){\r\n        return (!TextUtils.isEmpty(target) && Patterns.EMAIL_ADDRESS.matcher(target).matches());\r\n    }\r\n\r\n    public void hebeHinweismeldungHervor(){\r\n        if(txtHinweis.toString() != \"\"){\r\n            txtHinweis.setTextColor(Color.RED);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/org/dieschnittstelle/mobile/android/skeleton/LoginActivity.java b/app/src/main/java/org/dieschnittstelle/mobile/android/skeleton/LoginActivity.java
--- a/app/src/main/java/org/dieschnittstelle/mobile/android/skeleton/LoginActivity.java	
+++ b/app/src/main/java/org/dieschnittstelle/mobile/android/skeleton/LoginActivity.java	
@@ -47,42 +47,40 @@
         hebeHinweismeldungHervor();
 
 
-
-
 //        btnLogin.setEnabled(false);
 
         btnLogin.setOnClickListener(v -> {
             String inputEmail = editTextemailAdresse.getText().toString();
             String inputPassword = editTextpassword.getText().toString();
 
-            if(inputEmail.isEmpty() || inputPassword.isEmpty()){
+            if (inputEmail.isEmpty() || inputPassword.isEmpty()) {
 //              Snackbar.make(v, "Eingaben: " + inputEmail + " , " + inputPassword, Snackbar.LENGTH_SHORT).show();
-              Snackbar.make(v, "Fülle beide Felder aus!", Snackbar.LENGTH_SHORT).show();
-              txtHinweis.setText("FEHLER!");
-            }else{
+                Snackbar.make(v, "Fülle beide Felder aus!", Snackbar.LENGTH_SHORT).show();
+                txtHinweis.setText("FEHLER!");
+            } else {
 //                btnLogin.setEnabled(true);
 
                 boolean korrektesEmailFormat = isValidEmail(inputEmail);
 
-                if(korrektesEmailFormat){
+                if (korrektesEmailFormat) {
                     isValid = validate(inputEmail, inputPassword);
 
-                    if(!isValid){
+                    if (!isValid) {
                         counter--;
                         Snackbar.make(v, "Falscher Nutzername oder Passwort!", Snackbar.LENGTH_SHORT).show();
                         txtHinweis.setText("Versuche übrig: " + counter);
 
-                        if(counter == 0){
+                        if (counter == 0) {
                             btnLogin.setEnabled(false);
                             Snackbar.make(v, "Neu starten die Anwendung pls!", Snackbar.LENGTH_SHORT).show();
                         }
-                    }else{
+                    } else {
                         Snackbar.make(v, "Erfolgreich!", Snackbar.LENGTH_SHORT).show();
 
                         Intent intent = new Intent(this, MainActivity.class);
                         startActivity(intent);
                     }
-                }else{
+                } else {
                     txtHinweis.setText("Dies ist keine gültige Email!");
                     editTextemailAdresse.addTextChangedListener(new TextWatcher() {
                         @Override
@@ -108,22 +106,20 @@
 
     }
 
-    private boolean validate(String name, String password){
-        if(name.equals(userName) && password.equals(this.password)){
+    private boolean validate(String name, String password) {
+        if (name.equals(userName) && password.equals(this.password)) {
             return true;
-        }
-        else
-        {
+        } else {
             return false;
         }
     }
 
-    public static boolean isValidEmail(CharSequence target){
+    public static boolean isValidEmail(CharSequence target) {
         return (!TextUtils.isEmpty(target) && Patterns.EMAIL_ADDRESS.matcher(target).matches());
     }
 
-    public void hebeHinweismeldungHervor(){
-        if(txtHinweis.toString() != ""){
+    public void hebeHinweismeldungHervor() {
+        if (txtHinweis.toString() != "") {
             txtHinweis.setTextColor(Color.RED);
         }
     }
